Multi-Key indexes are used for key with array values, these are typically bigger than single-field indexes because it stores values of elements in array as seperate elements in index. 

For e.g, you have a field hobbies:["", "", "", ""], and you want to index on this field.
createIndex({hobbies:1})
Then in the index, mongodb will create 4 seperate fields as there 4 values in hobbies.

So, if you have 1000 documents and each having hobbies field with 4 values on average, then it will create 4000 separate elements in the index.

--------------------------------------------------------------------------------------------

You can also create multi-key index on array of embedded documents.

for e.g. address:[{street:""}, {street:""}]

But it may cause performance issues because, here again, it will have to store each value of in embedded docs as separate field.


Restrictions on multi-key indexes:

you can create compound index of multi-key but there should only be 1 array field not two or more parallel field.

Eg. createIndex({name:1, hobbies:1}) will work

but createIndex({address:1, hobbies:1}) will not work bcoz both address and hobbies are array field and in mongodb you can't create compound index of parallel arrays.




